{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrin\\\\OneDrive\\\\Desktop\\\\Todo\\\\tasks-app\\\\src\\\\components\\\\TasksSection\\\\TaskItem\\\\BtnToggleCompleted.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useAppDispatch } from \"../../../store/hooks\";\nimport { tasksActions } from \"../../../store/Tasks.store\";\nimport { ReactComponent as SvgX } from \"../../../assets/x.svg\";\nimport { ReactComponent as Check } from \"../../../assets/check.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BtnToggleCompleted = _ref => {\n  _s();\n  let {\n    taskCompleted,\n    taskId,\n    isListInView1\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const toggleTaskCompleted = id => {\n    dispatch(tasksActions.toggleTaskCompleted(id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    title: taskCompleted ? \"mark as uncompleted\" : \"mark as completed\",\n    className: `${taskCompleted ? \"bg-emerald-200 text-emerald-800 \" : \"bg-amber-200 text-amber-800 \"} ${isListInView1 ? \"mr-4\" : \"mr-4 order-0\"} rounded-full font-medium`,\n    onClick: () => toggleTaskCompleted(taskId),\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"block py-1 px-3 absolute invisible sm:static sm:visible\",\n      children: taskCompleted ? \"completed\" : \"uncompleted\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \" sm:hidden w-6 h-6 grid place-items-center\",\n      children: taskCompleted ? /*#__PURE__*/_jsxDEV(Check, {\n        className: \"w-3 h-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(SvgX, {\n        className: \"w-3 h-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(BtnToggleCompleted, \"BJQ1DUn/XFEl2NsQ3DWyHAXfnkY=\", false, function () {\n  return [useAppDispatch];\n});\n_c = BtnToggleCompleted;\nexport default _c2 = /*#__PURE__*/React.memo(BtnToggleCompleted);\nvar _c, _c2;\n$RefreshReg$(_c, \"BtnToggleCompleted\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useAppDispatch","tasksActions","ReactComponent","SvgX","Check","BtnToggleCompleted","taskCompleted","taskId","isListInView1","dispatch","toggleTaskCompleted","id","memo"],"sources":["C:/Users/shrin/OneDrive/Desktop/Todo/tasks-app/src/components/TasksSection/TaskItem/BtnToggleCompleted.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useAppDispatch } from \"../../../store/hooks\";\r\nimport { tasksActions } from \"../../../store/Tasks.store\";\r\nimport { ReactComponent as SvgX } from \"../../../assets/x.svg\";\r\nimport { ReactComponent as Check } from \"../../../assets/check.svg\";\r\n\r\nconst BtnToggleCompleted: React.FC<{\r\n  taskCompleted: boolean;\r\n  taskId: string;\r\n  isListInView1: boolean;\r\n}> = ({ taskCompleted, taskId, isListInView1 }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const toggleTaskCompleted = (id: string) => {\r\n    dispatch(tasksActions.toggleTaskCompleted(id));\r\n  };\r\n\r\n  return (\r\n    <button\r\n      title={taskCompleted ? \"mark as uncompleted\" : \"mark as completed\"}\r\n      className={`${\r\n        taskCompleted\r\n          ? \"bg-emerald-200 text-emerald-800 \"\r\n          : \"bg-amber-200 text-amber-800 \"\r\n      } ${isListInView1 ? \"mr-4\" : \"mr-4 order-0\"} rounded-full font-medium`}\r\n      onClick={() => toggleTaskCompleted(taskId)}\r\n    >\r\n      <span className=\"block py-1 px-3 absolute invisible sm:static sm:visible\">\r\n        {taskCompleted ? \"completed\" : \"uncompleted\"}\r\n      </span>\r\n      <span className=\" sm:hidden w-6 h-6 grid place-items-center\">\r\n        {taskCompleted ? (\r\n          <Check className=\"w-3 h-3\" />\r\n        ) : (\r\n          <SvgX className=\"w-3 h-3\" />\r\n        )}\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default React.memo(BtnToggleCompleted);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,cAAc,IAAIC,IAAI,QAAQ,uBAAuB;AAC9D,SAASD,cAAc,IAAIE,KAAK,QAAQ,2BAA2B;AAAC;AAEpE,MAAMC,kBAIJ,GAAG,QAA8C;EAAA;EAAA,IAA7C;IAAEC,aAAa;IAAEC,MAAM;IAAEC;EAAc,CAAC;EAC5C,MAAMC,QAAQ,GAAGT,cAAc,EAAE;EAEjC,MAAMU,mBAAmB,GAAIC,EAAU,IAAK;IAC1CF,QAAQ,CAACR,YAAY,CAACS,mBAAmB,CAACC,EAAE,CAAC,CAAC;EAChD,CAAC;EAED,oBACE;IACE,KAAK,EAAEL,aAAa,GAAG,qBAAqB,GAAG,mBAAoB;IACnE,SAAS,EAAG,GACVA,aAAa,GACT,kCAAkC,GAClC,8BACL,IAAGE,aAAa,GAAG,MAAM,GAAG,cAAe,2BAA2B;IACvE,OAAO,EAAE,MAAME,mBAAmB,CAACH,MAAM,CAAE;IAAA,wBAE3C;MAAM,SAAS,EAAC,yDAAyD;MAAA,UACtED,aAAa,GAAG,WAAW,GAAG;IAAa;MAAA;MAAA;MAAA;IAAA,QACvC,eACP;MAAM,SAAS,EAAC,4CAA4C;MAAA,UACzDA,aAAa,gBACZ,QAAC,KAAK;QAAC,SAAS,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,gBAE7B,QAAC,IAAI;QAAC,SAAS,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA;IAC1B;MAAA;MAAA;MAAA;IAAA,QACI;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEb,CAAC;AAAC,GAjCID,kBAIJ;EAAA,QACiBL,cAAc;AAAA;AAAA,KAL3BK,kBAIJ;AA+BF,kCAAeN,KAAK,CAACa,IAAI,CAACP,kBAAkB,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}