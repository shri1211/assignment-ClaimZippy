{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useAppSelector } from \"../../store/hooks\";\nconst useTodayTasks = () => {\n  _s();\n  const tasks = useAppSelector(state => state.tasks.tasks);\n  const [todaysTasks, setTodaysTasks] = useState([]);\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  const dateTimeFormat = `${year}-${month.toString().padStart(2, \"0\")}-${day.toString().padStart(2, \"0\")}`;\n  useEffect(() => {\n    let filteredTasks = tasks.filter(task => task.date === dateTimeFormat);\n    setTodaysTasks(filteredTasks);\n  }, [dateTimeFormat, tasks]);\n  return todaysTasks;\n};\n_s(useTodayTasks, \"vHxIlPhbyD5kdTkPJwnvr5ZvBq4=\", false, function () {\n  return [useAppSelector];\n});\nexport default useTodayTasks;","map":{"version":3,"names":["useState","useEffect","useAppSelector","useTodayTasks","tasks","state","todaysTasks","setTodaysTasks","date","Date","year","getFullYear","month","getMonth","day","getDate","dateTimeFormat","toString","padStart","filteredTasks","filter","task"],"sources":["C:/Users/shrin/OneDrive/Desktop/Todo/tasks-app/src/components/hooks/useTodayTasks.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Task } from \"../../interfaces\";\r\nimport { useAppSelector } from \"../../store/hooks\";\r\n\r\nconst useTodayTasks = (): Task[] => {\r\n  const tasks = useAppSelector((state) => state.tasks.tasks);\r\n  const [todaysTasks, setTodaysTasks] = useState<Task[]>([]);\r\n\r\n  const date: Date = new Date();\r\n  const year: number = date.getFullYear();\r\n  const month: number = date.getMonth() + 1;\r\n  const day: number = date.getDate();\r\n\r\n  const dateTimeFormat = `${year}-${month.toString().padStart(2, \"0\")}-${day\r\n    .toString()\r\n    .padStart(2, \"0\")}`;\r\n\r\n  useEffect(() => {\r\n    let filteredTasks: Task[] = tasks.filter(\r\n      (task: Task) => task.date === dateTimeFormat\r\n    );\r\n    setTodaysTasks(filteredTasks);\r\n  }, [dateTimeFormat, tasks]);\r\n  return todaysTasks;\r\n};\r\n\r\nexport default useTodayTasks;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,cAAc,QAAQ,mBAAmB;AAElD,MAAMC,aAAa,GAAG,MAAc;EAAA;EAClC,MAAMC,KAAK,GAAGF,cAAc,CAAEG,KAAK,IAAKA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EAC1D,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAE1D,MAAMQ,IAAU,GAAG,IAAIC,IAAI,EAAE;EAC7B,MAAMC,IAAY,GAAGF,IAAI,CAACG,WAAW,EAAE;EACvC,MAAMC,KAAa,GAAGJ,IAAI,CAACK,QAAQ,EAAE,GAAG,CAAC;EACzC,MAAMC,GAAW,GAAGN,IAAI,CAACO,OAAO,EAAE;EAElC,MAAMC,cAAc,GAAI,GAAEN,IAAK,IAAGE,KAAK,CAACK,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGJ,GAAG,CACvEG,QAAQ,EAAE,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;EAErBjB,SAAS,CAAC,MAAM;IACd,IAAIkB,aAAqB,GAAGf,KAAK,CAACgB,MAAM,CACrCC,IAAU,IAAKA,IAAI,CAACb,IAAI,KAAKQ,cAAc,CAC7C;IACDT,cAAc,CAACY,aAAa,CAAC;EAC/B,CAAC,EAAE,CAACH,cAAc,EAAEZ,KAAK,CAAC,CAAC;EAC3B,OAAOE,WAAW;AACpB,CAAC;AAAC,GApBIH,aAAa;EAAA,QACHD,cAAc;AAAA;AAqB9B,eAAeC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}