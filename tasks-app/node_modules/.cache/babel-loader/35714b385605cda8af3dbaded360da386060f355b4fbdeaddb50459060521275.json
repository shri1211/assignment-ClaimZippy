{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrin\\\\OneDrive\\\\Desktop\\\\Todo\\\\tasks-app\\\\src\\\\components\\\\Utilities\\\\LayoutRoutes.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useAppDispatch } from \"../../store/hooks\";\nimport { modalActions } from \"../../store/Modal.store\";\nimport ButtonsSort from \"../TasksSection/ButtonsSort\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LayoutRoutes = _ref => {\n  _s();\n  let {\n    title,\n    tasks\n  } = _ref;\n  const [isListInView1, setIsListInView1] = useState(false);\n  const dispatch = useAppDispatch();\n\n  // const { sortedBy, setSortedBy, sortedTasks } = useSortTasks(tasks);\n\n  const openModalHandler = () => {\n    dispatch(modalActions.openModalCreateTask());\n  };\n  const tasksTitle = `${title} (${tasks.length} ${tasks.length === 1 ? \"task\" : \"tasks\"})`;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"font-medium my-5 text-center sm:text-left sm:my-8 md:text-2xl text-lg dark:text-slate-200\",\n      children: tasksTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonsSort, {\n      isListInView1: isListInView1,\n      setIsListInView1: setIsListInView1\n      // sortedBy={sortedBy}\n      // setSortedBy={setSortedBy}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: `tasksList mt-4 grid gap-2 sm:gap-4 xl:gap-6 ${isListInView1 ? \"grid-cols-1\" : \"2xl:grid-cols-4 xl:grid-cols-3 lg:grid-cols-4 md:grid-cols-3 grid-cols-2 items-end\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openModalHandler,\n          className: `border-2 border-slate-300\n             text-slate-400 w-full rounded-lg\n              border-dashed transition hover:bg-slate-300\n               hover:text-slate-500\n               dark:border-slate-700 dark:hover:bg-slate-800 dark:hover:text-slate-300 ${isListInView1 ? \"h-20 sm:h-32\" : \"h-52 sm:h-64\"}`,\n          children: \"Add new task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(LayoutRoutes, \"7MR7nvjSXuf9cBZTlvhlyEWba+Q=\", false, function () {\n  return [useAppDispatch];\n});\n_c = LayoutRoutes;\nexport default _c2 = /*#__PURE__*/React.memo(LayoutRoutes);\nvar _c, _c2;\n$RefreshReg$(_c, \"LayoutRoutes\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useAppDispatch","modalActions","ButtonsSort","LayoutRoutes","title","tasks","isListInView1","setIsListInView1","dispatch","openModalHandler","openModalCreateTask","tasksTitle","length","memo"],"sources":["C:/Users/shrin/OneDrive/Desktop/Todo/tasks-app/src/components/Utilities/LayoutRoutes.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Task } from \"../../interfaces\";\r\nimport { useAppDispatch } from \"../../store/hooks\";\r\nimport { modalActions } from \"../../store/Modal.store\";\r\nimport useSortTasks from \"../hooks/useSortTasks\";\r\nimport ButtonsSort from \"../TasksSection/ButtonsSort\";\r\nimport TaskItem from \"../TasksSection/TaskItem/TaskItem\";\r\n\r\ntype Props = {\r\n  title: string;\r\n  tasks: Task[] | [];\r\n};\r\n\r\nconst LayoutRoutes: React.FC<Props> = ({ title, tasks }) => {\r\n  const [isListInView1, setIsListInView1] = useState<boolean>(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  // const { sortedBy, setSortedBy, sortedTasks } = useSortTasks(tasks);\r\n\r\n  const openModalHandler = () => {\r\n    dispatch(modalActions.openModalCreateTask());\r\n  };\r\n\r\n  const tasksTitle = `${title} (${tasks.length} ${\r\n    tasks.length === 1 ? \"task\" : \"tasks\"\r\n  })`;\r\n\r\n  return (\r\n    <section>\r\n      <h1 className=\"font-medium my-5 text-center sm:text-left sm:my-8 md:text-2xl text-lg dark:text-slate-200\">\r\n        {tasksTitle}\r\n      </h1>\r\n      <ButtonsSort\r\n        isListInView1={isListInView1}\r\n        setIsListInView1={setIsListInView1}\r\n        // sortedBy={sortedBy}\r\n        // setSortedBy={setSortedBy}\r\n      />\r\n      <ul\r\n        className={`tasksList mt-4 grid gap-2 sm:gap-4 xl:gap-6 ${\r\n          isListInView1\r\n            ? \"grid-cols-1\"\r\n            : \"2xl:grid-cols-4 xl:grid-cols-3 lg:grid-cols-4 md:grid-cols-3 grid-cols-2 items-end\"\r\n        }`}\r\n      >\r\n        {/* {sortedTasks.map((task) => (\r\n          <TaskItem key={task.id} isListInView1={isListInView1} task={task} />\r\n        ))} */}\r\n        <li>\r\n          <button\r\n            onClick={openModalHandler}\r\n            className={`border-2 border-slate-300\r\n             text-slate-400 w-full rounded-lg\r\n              border-dashed transition hover:bg-slate-300\r\n               hover:text-slate-500\r\n               dark:border-slate-700 dark:hover:bg-slate-800 dark:hover:text-slate-300 ${\r\n                 isListInView1 ? \"h-20 sm:h-32\" : \"h-52 sm:h-64\"\r\n               }`}\r\n          >\r\n            Add new task\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default React.memo(LayoutRoutes);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,YAAY,QAAQ,yBAAyB;AAEtD,OAAOC,WAAW,MAAM,6BAA6B;AAAC;AAQtD,MAAMC,YAA6B,GAAG,QAAsB;EAAA;EAAA,IAArB;IAAEC,KAAK;IAAEC;EAAM,CAAC;EACrD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAU,KAAK,CAAC;EAElE,MAAMS,QAAQ,GAAGR,cAAc,EAAE;;EAEjC;;EAEA,MAAMS,gBAAgB,GAAG,MAAM;IAC7BD,QAAQ,CAACP,YAAY,CAACS,mBAAmB,EAAE,CAAC;EAC9C,CAAC;EAED,MAAMC,UAAU,GAAI,GAAEP,KAAM,KAAIC,KAAK,CAACO,MAAO,IAC3CP,KAAK,CAACO,MAAM,KAAK,CAAC,GAAG,MAAM,GAAG,OAC/B,GAAE;EAEH,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,2FAA2F;MAAA,UACtGD;IAAU;MAAA;MAAA;MAAA;IAAA,QACR,eACL,QAAC,WAAW;MACV,aAAa,EAAEL,aAAc;MAC7B,gBAAgB,EAAEC;MAClB;MACA;IAAA;MAAA;MAAA;MAAA;IAAA,QACA,eACF;MACE,SAAS,EAAG,+CACVD,aAAa,GACT,aAAa,GACb,oFACL,EAAE;MAAA,uBAKH;QAAA,uBACE;UACE,OAAO,EAAEG,gBAAiB;UAC1B,SAAS,EAAG;AACxB;AACA;AACA;AACA,yFACiBH,aAAa,GAAG,cAAc,GAAG,cAClC,EAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAGC;QAAA;QAAA;QAAA;MAAA;IACN;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEd,CAAC;AAAC,GArDIH,YAA6B;EAAA,QAGhBH,cAAc;AAAA;AAAA,KAH3BG,YAA6B;AAuDnC,kCAAeL,KAAK,CAACe,IAAI,CAACV,YAAY,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}